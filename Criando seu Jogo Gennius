let order = [];
let clickedOrder = [];
let score = 0;

// 0 = verde 
// 1= vermelho 
// 2 - amarelo
// 3 - azul

const blue = document.querySelector('.blue');
const red = document.querySelector('.red');
const green = document.querySelector('.green');
const yellow= document.querySelector('.yellow');

// criando order aleatoria de cores

let shuffleOrder = () => {
    let colorOrder = Math.floor(Math.random() * 4);
    order[order.length] = colorOrder;
    clickedOrder = [];

    for( let  i in order) {
        let elementColor = creatColorElement(order [i]);
        lightColor(elementColor, Number(i)+1);

    }
}
// acender a proxima cor 

let lightColor = (element,number) => {
    number = number *500 ;
    setTimeout(()=> {
      element.classList.add('selected');  
    } ,number -250 );

    setTimeout(() => {
        element.classList.remove('selected');
    });
 }

 // check os botoes clicados 

 let checkOrder = () => {
     for (let i in clickedOrder) {
         if (clickedOrder[i] != order [i]) {
             gameOver();
             break;
         }
     }
     if (clickedOrder.length == order.length) {
         alert (`Pontuação : ${score}\nVoce acertou ! Iniciando proximo nivel! `);
         nextLevel ();

              }
    }

    // função para o clique do usuario 
    let click = (color)=> {
    clickedOrder(clickedOrder.length) = color;
    creatColorElement(color).classList.add('selected');

setTimeout(() => {
 creatColorElement(color).classList.remove('selected');
checkOrder();

},250);

}

    // creat color Element - função que retorna a cor 

    let creatColorElement = (color ) => {
        if (color == 0) { 
            return green;
        }else  if (color ==1) {
             return red;
        }else if (color == 2) {
            return yellow;
        }else if (color == 3) { 
            return blue;
        }
    }
    // função proximo level 
    let  nextLevel = () => {
        score ++ ;
        shuffleOrder();

    }
    // caso tenha perdido o jogo 

let gameOver = () => {
    alert (`Pontução : ${score}!\nVoce perdeu o Jogo !\n Clique em Ok para inciar um novo jogo  `);
    order =[];
    clickedOrder = [];

    playgame();

}
// funçao de inicio do jogo 

let playgame =() =>{
    alert ('bem vindo a Genesus ! inciando novo JOGO ! ');
    score= 0 ;

    nextLevel();

}

//green.addEventListener('click', click(0));
//red.addEventListener('click', click(1));
//yellow.addEventListener('click', click(2));
//blue.addEventListener('click', click(3));

// evento de click 

green.onclick = () => click(0);
red.onclick = () => click(1);
yellow.onclick = () => click(2);
blue.onclick = () => click(3);

playgame();
